What happens when you initialize a repository? Why do you need to do it?

A: When you initialize a repository, an empty repository (no commits) is created. 
This respository now contains the metadata necessary for committing and version 
control in the .git file that has been created  by initializing a repository. 
Without initializing a repository, you will not have the .git file require for
version-control

How is the staging area different from the working directory and the repository? 
What value do you think it offers?

A: The staging area is different from the working directory as it contains files 
that will be committed. The repository consists of the committed files already, or
a log of them. The value of the staging area is that it allows each commit to 
identify which file exactly changed.

How can you use the sataging area to make sure have one commit per logical change?

A: The git diff function can be used to determine what exactly changed between the 
staging area and the working directory. That way you can add only the files 
necessary for a logical change to commit. The staging area helps you remember the 
changes you've made to files so you dont commit multiple logical changes. 

What are some situations when branches would be helpful in keeping your history 
organized? How would branches help?

A: Branches allow to have multiple versions of a final code such as different 
languages. They also allow you to try experimental codes to add new features, or 
develop very similar programs such as the same game with varying difficulty. 

